package org.geomapapp.gis.shape;

import java.awt.geom.*;
import java.awt.*;

public class ESRIPolyLineZ extends ESRIPolyLineM
			implements ESRIZ {
	double[] z;
	double[] zRange;
	public ESRIPolyLineZ( double xmin,
				double ymin,
				double xmax,
				double ymax,
				int nParts,
				int npt) {
		super( xmin, ymin, xmax, ymax, nParts, npt);
		z = new double[npt];
	}
	public int getType() {
		return 13;
	}
	public void addZ( int i, double z ) {
		this.z[i] = z;
	}
	public double[] getZ() {
		return z;
	}
	public double[] getZRange() {
		if( z.length==0 )return new double[] {0., 0.};
		if( zRange==null ) {
			zRange=new double[] {z[0], z[0]};
			for( int i=0 ; i<z.length ; i++) {
				if( z[i]>zRange[1] )zRange[1] = z[i];
				else if( z[i]<zRange[0] )zRange[0] = z[i];
			}
		}
		return zRange;
	}
	public double[][] inverse(org.geomapapp.geom.MapProjection proj, 
					double[][] bounds) {
		bounds = super.inverse( proj, bounds);
		if( z.length==0 ) return bounds;
		double[] z = getZRange();
		if( bounds[3]==null ) {
			bounds[3] = z;
			return bounds;
		}
		if( z[1]>bounds[3][1] )bounds[3][1]=z[1];
		if( z[0]<bounds[3][0] )bounds[3][0]=z[0];
		return bounds;
	}
	public void setZRange(double minz, double maxz) {
		zRange = new double[] {minz, maxz};
	}
	public ESRIPoint[] getPart( int part ) {
		int k1 = parts[part];
		int k2 = part==parts.length-1
			? pts.length
			: parts[part+1];
		ESRIPointZ[] seg = new ESRIPointZ[k2-k1];
		for( int k=k1 ; k<k2 ; k++) 
			seg[k-k1] = new ESRIPointZ(pts[k].getX(),
						pts[k].getY(),
						m[k],
						z[k]);
		return seg;
	}
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("PolyLineZ (13), "+ parts.length + " parts\t(" + x +"\t"+ y  +"\t"+ width +"\t"+ height+")" );
		for( int p=0 ; p<parts.length ; p++) {
			ESRIPoint[] pts = getPart(p);
			sb.append("\npart "+p+", "+pts.length +" points");
			for( int k=0 ; k<pts.length ; k++) {
				sb.append("\n\t"+ pts[k].getX() +"\t"+ pts[k].getY());
			}
		}
		return sb.toString();
	}
}
