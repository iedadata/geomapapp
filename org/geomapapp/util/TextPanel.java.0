package org.geomapapp.util;

import javax.swing.*;
import javax.swing.event.*;
import java.awt.*;
import java.awt.font.*;
import java.awt.image.*;
import java.awt.event.*;

public class TextPanel extends JPanel
		implements ActionListener {
	JTextArea textA;
	JComboBox fontCB;
	JTextField sizeF;
	JToggleButton boldB;
	JToggleButton italicB;
	JTextField rotateF;
	public TextPanel(Font font) {
		super( new BorderLayout() );
		initPanel(font);
	}
	private void initPanel(Font font) {
		textA = new JTextArea("enter text");
		textA.selectAll();
		textA.addCaretListener( new CaretListener() {
			public void caretUpdate(CaretEvent evt) {
				update();
			}
		});
		String[] fonts = 
			GraphicsEnvironment.getLocalGraphicsEnvironment(
			).getAvailableFontFamilyNames();
		fontCB = new JComboBox(fonts);
		fontCB.addActionListener( this );
		boldB  = new JToggleButton("B");
		boldB.setFont( new Font("Serif", 
				Font.BOLD, 
				boldB.getFont().getSize()) );
		boldB.addActionListener( this );
		italicB  = new JToggleButton("I");
		italicB.setFont( new Font("Serif", 
				Font.ITALIC, 
				italicB.getFont().getSize()) );
		italicB.addActionListener( this );

		sizeF = new JTextField("24", 3);
		rotateF = new JTextField("0", 3);
		sizeF.addActionListener(this);
		rotateF.addActionListener(this);
		Box box = Box.createHorizontalBox();
		box.add(fontCB);
		box.add(boldB);
		box.add(italicB);
		box.add(new JLabel(" size"));
		box.add(sizeF);
		box.add(new JLabel(" angle"));
		box.add(rotateF);
		add( box, "North");
		add( textA );
		if( font!=null ) {
			String family = font.getFamily();
			for( int k=0 ; k<fonts.length ; k++) {
				if( family.equals(fonts[k]) ) {
					fontCB.setSelectedIndex(k);
					break;
				}
			}
			boldB.setSelected(font.isBold());
			italicB.setSelected(font.isItalic());
			sizeF.setText( font.getSize()+"");
		}
	}
	public double getRotation() {
		return Math.toRadians(Double.parseDouble(rotateF.getText()));
	}
	public Font resolveFont() {
		int style = Font.PLAIN;
		if( boldB.isSelected() ) style|=Font.BOLD;
		if( italicB.isSelected() ) style|=Font.ITALIC;
		return new Font((String)fontCB.getSelectedItem(),
				style,
				Integer.parseInt(sizeF.getText()));
	}
	public String getText() {
		return textA.getText();
	}
	public void actionPerformed(ActionEvent evt) {
		update();
	}
	void update() {
		textA.setFont( resolveFont() );
		try {
			((Window)getTopLevelAncestor()).pack();
		}catch(Exception ex) {
		}
		testA.repaint();
		firePropertyChange("UPDATE", 0, 1);
	}
	public static void main(String[] args) {
		JOptionPane.showMessageDialog(null,new TextPanel(null));
		System.exit(0);
	//	JFrame frame = new JFrame("test");
	//	frame.getContentPane().add(new TextPanel());
	//	frame.pack();
	//	frame.show();
	//	frame.setDefaultCloseOperation(frame.EXIT_ON_CLOSE);
	}
}
