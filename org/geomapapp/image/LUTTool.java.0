package org.geomapapp.image;

import org.geomapapp.grid.*;
import org.geomapapp.util.*;

import java.beans.*;
import javax.swing.*;
import java.awt.*;
import java.awt.image.BufferedImage;

public class LUTTool extends JPanel {
	GridRenderer renderer;
	Grid2DOverlay grid;
	ScaleColor scaler;
	JDialog dialog;
	SunTool sun;
	VETool ve;
	PropertyChangeListener propL;
	public LUTTool(Grid2DOverlay grid) {
		super( new BorderLayout() );
		this.grid = grid;
		Palette pal = new Palette(Palette.LAND_SEA);
		renderer = new GridRenderer(pal,
				1.,
				1000.,
				new org.geomapapp.geom.XYZ(-1.,1.,1.));
		Histogram histo = new Histogram(grid.getGrid(), 200);
		scaler = new ScaleColor(pal, histo);
		sun = new SunTool(renderer.getSun());
		ve = new VETool(renderer.getVE());
		Rectangle r = grid.getGrid().getBounds();
		propL = new PropertyChangeListener() {
			public void propertyChange(PropertyChangeEvent evt) {
				gridImage();
			}
		};
		scaler.addPropertyChangeListener( propL );
		sun.addPropertyChangeListener( propL );
		ve.addPropertyChangeListener( propL );
		initDialog();
	}
	public void setNewGrid() {
		Histogram histo = new Histogram(grid.getGrid(), 200);
		scaler.setHist( histo);
	}
	void initDialog() {
		dialog = new JDialog( 
			(JFrame)grid.getMap().getTopLevelAncestor(), 
			"Modify Color Scale");
		add(scaler);
		add(scaler.getTools(), "North");
		JPanel p = new JPanel( new GridLayout(0,1) );
		SimpleBorder sb = new SimpleBorder();
		sun.setBorder( BorderFactory.createCompoundBorder(
			BorderFactory.createTitledBorder("Sun"),
			sb));
		ve.setBorder( BorderFactory.createCompoundBorder(
			BorderFactory.createTitledBorder("V.E."),
			sb));
		p.add(sun);
		p.add(ve);
		add(p, "East");
		add(scaler.getPaletteTool(), "South");
		dialog.getContentPane().add(this);
		dialog.pack();
	}
	void gridImage() {
		renderer.setPalette( scaler.getPalette());
		renderer.setSun(sun.getSun());
		renderer.setVE( ve.getVE());
		BufferedImage image = renderer.gridImage( grid.getGrid() );
		double scale = grid.getScale();
		double[] offsets = grid.getOffsets();
		grid.setImage(image, offsets[0], offsets[1], scale);
		grid.getMap().repaint();
	}
	public void showDialog() {
		dialog.show();
	}
}
