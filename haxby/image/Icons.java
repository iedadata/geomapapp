package haxby.image;

import java.awt.*;
import java.awt.image.*;
import javax.swing.*;

public class Icons {
	public static int SELECT = 0;
	public static int ZOOM_IN = 1;
	public static int ZOOM_OUT = 2;
	public static int MASK = 3;
	public static int GRID = 4;
	public static int CONTOUR = 5;
	public static int GRATICULE = 6;
	public static int FORWARD = 7;
	public static int REVERSE = 8;
	public static int WIDER = 9;
	public static int NARROWER = 10;
	public static int SAVE = 11;
	public static int SEGMENTS = 12;
	public static int DEPTH = 13;
	public static int ANNOTATION = 14;
	public static int ROTATE_270 = 15;
	public static int ROTATE_90 = 16;
	public static int NEXT = 17;
	public static int BACK = 18;
	public static int DIGITIZE = 19;

//	***** GMA 1.6.2: New icons added to indicate positive/negative image flip button
	public static int POSITIVE_BOX = 20;
	public static int NEGATIVE_BOX = 21;
//	***** GMA 1.6.2	

	public static int FOCUS = 32;
	public static int POSITIVE = 33;
	public static int NEGATIVE = 34;
	public static int GRAY = 35;
	static haxby.util.SimpleBorder border = new haxby.util.SimpleBorder();
	
//	***** GMA 1.6.2: Increase array length to incorporate new icons.
	static ImageIcon[][] icons = new ImageIcon[22][2];
//	***** GMA 1.6.2	

	static ImageIcon[] focus=new ImageIcon[2];
	static ImageIcon[] positive=new ImageIcon[2];
	static ImageIcon[] negative=new ImageIcon[2];
	static ImageIcon[] gray=new ImageIcon[2];
	static int[] rgb = { 0, 0xff000000, 0xffffffff, 0xffff0000 };
	public static ImageIcon doIcon( byte[][] map, boolean selected, Color borderFill) {
		int width = map[0].length;
		int height = map.length;
		if(width>20)width=20;
		if(height>20)height=20;
		BufferedImage im = new BufferedImage( 22, 22, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g = im.createGraphics();
		border.setSelected( selected );
		border.paintBorder( new JPanel(), g, 0, 0, 22, 22);
		int xoffset = (22-width)/2;
		int yoffset = (22-height)/2;
		if( xoffset<1 ) xoffset=1;
		if( yoffset<1 ) yoffset=1;
		int c = borderFill.getRGB();
		for(int x=1 ; x<21 ; x++) {
			for(int y=1 ; y<21 ; y++ ) {
				im.setRGB( x, y, 0 );
			}
		}
		for(int x=0 ; x<width ; x++ ) {
			for(int y=0 ; y<height ; y++ ) {
				try {
					if( map[y][x]==0 ) im.setRGB( x+xoffset, y+yoffset, 0);
					else im.setRGB( x+xoffset, y+yoffset, rgb[map[y][x]]);
				} catch (Exception ex) {
				}
			}
		}
		return new ImageIcon( im );
	}
	public static ImageIcon getIcon( int which, boolean selected ) {
		int s = selected ? 0 : 1;
		if( which>map.length ) {
			if( which==32 ) {
				if( focus[s]==null ) doFocus( selected );
				return focus[s];
			} else if( which==33 ) {
				if( positive[s]==null ) doPositive( selected );
				return positive[s];
			} else if( which==34 ) {
				if( negative[s]==null ) doNegative( selected );
				return negative[s];
			} else if( which==35 ) {
				if( gray[s]==null ) doGray( selected );
				return gray[s];
			}
			return null;
		}
		Color c = new Color(0,0,0,0);
		if(icons[which][s]==null) {
			icons[which][s] = doIcon( map[which], selected, c);
		}
		return icons[which][s];
	}
	static void doFocus( boolean selected ) {
		BufferedImage im = new BufferedImage( 22, 22, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g = im.createGraphics();
		border.setSelected( selected );
		border.paintBorder( new JPanel(), g, 0, 0, 22, 22);
		for(int x=1 ; x<21 ; x++) {
			for(int y=1 ; y<21 ; y++ ) {
				im.setRGB( x, y, 0 );
			}
		}
		g.setColor( Color.black);
		g.setRenderingHint( RenderingHints.KEY_TEXT_ANTIALIASING,
				RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont( new Font("Serif", Font.ITALIC, 20 ));
		g.drawString( "fx", 4, 17 );
		int s = selected ? 0 : 1;
		focus[s] = new ImageIcon(im);
	}
	static void doPositive( boolean selected ) {
		BufferedImage im = new BufferedImage( 22, 22, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g = im.createGraphics();
		border.setSelected( selected );
		border.paintBorder( new JPanel(), g, 0, 0, 22, 22);
		for(int x=1 ; x<21 ; x++) {
			for(int y=1 ; y<21 ; y++ ) {
				im.setRGB( x, y, 0xffffffff );
			}
		}
		g.setColor( Color.black);
		g.setRenderingHint( RenderingHints.KEY_TEXT_ANTIALIASING,
				RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont( new Font("Serif", Font.BOLD, 20 ));
		g.drawString( "A", 4, 17 );
		int s = selected ? 0 : 1;
		positive[s] = new ImageIcon(im);
	}
	static void doNegative( boolean selected ) {
		BufferedImage im = new BufferedImage( 22, 22, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g = im.createGraphics();
		border.setSelected( selected );
		border.paintBorder( new JPanel(), g, 0, 0, 22, 22);
		for(int x=1 ; x<21 ; x++) {
			for(int y=1 ; y<21 ; y++ ) {
				im.setRGB( x, y, 0xff000000 );
			}
		}
		g.setColor( Color.white);
		g.setRenderingHint( RenderingHints.KEY_TEXT_ANTIALIASING,
				RenderingHints.VALUE_TEXT_ANTIALIAS_ON);
		g.setFont( new Font("Serif", Font.BOLD, 20 ));
		g.drawString( "A", 4, 17 );
		int s = selected ? 0 : 1;
		negative[s] = new ImageIcon(im);
	}
	static void doGray( boolean selected ) {
		BufferedImage im = new BufferedImage( 22, 22, BufferedImage.TYPE_INT_ARGB);
		Graphics2D g = im.createGraphics();
		border.setSelected( selected );
		border.paintBorder( new JPanel(), g, 0, 0, 22, 22);
		for(int x=1 ; x<21 ; x++) {
			int gray = x*255/20;
			int color = 0xff000000 | (gray<<16) | (gray<<8) | gray;
			for(int y=1 ; y<21 ; y++ ) {
				im.setRGB( x, y, color );
			}
		}
		int s = selected ? 0 : 1;
		gray[s] = new ImageIcon(im);
	}
	static byte[][][] map = {
		{
			{0,0,0,2,2,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,2,1,1,2,0,0,0,0,0,0,0,0,0},
			{0,0,0,2,1,1,1,2,0,0,0,0,0,0,0,0},
			{0,0,0,2,1,1,1,1,2,0,0,0,0,0,0,0},
			{0,0,0,2,1,1,1,1,1,2,0,0,0,0,0,0},
			{0,0,0,2,1,1,1,1,1,1,2,0,0,0,0,0},
			{0,0,0,2,1,1,1,1,1,1,1,2,0,0,0,0},
			{0,0,0,2,1,1,1,1,1,1,1,1,2,0,0,0},
			{0,0,0,2,1,1,1,1,1,2,2,2,2,0,0,0},
			{0,0,0,2,1,1,0,1,1,2,0,0,0,0,0,0},
			{0,0,0,2,1,2,2,2,1,1,2,0,0,0,0,0},
			{0,0,0,2,2,0,0,2,1,1,2,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,2,1,1,2,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,2,2,0,0,0,0,0}
		},
		{
			{0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0},
			{0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0},
			{0,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0},
			{0,1,2,2,2,1,1,2,2,2,1,0,0,0,0,0},
			{1,1,2,2,2,1,1,2,2,2,1,1,0,0,0,0},
			{1,2,2,1,1,1,1,1,1,2,2,1,0,0,0,0},
			{1,2,2,1,1,1,1,1,1,2,2,1,0,0,0,0},
			{1,1,2,2,2,1,1,2,2,2,1,1,0,0,0,0},
			{0,1,2,2,2,1,1,2,2,2,1,0,0,0,0,0},
			{0,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0},
			{0,0,1,1,1,2,2,1,1,1,1,0,0,0,0,0},
			{0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0}
		},
		{
			{0,0,0,0,1,1,1,1,0,0,0,0,0,0,0,0},
			{0,0,1,1,1,2,2,1,1,1,0,0,0,0,0,0},
			{0,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0},
			{0,1,2,2,2,2,2,2,2,2,1,0,0,0,0,0},
			{1,1,2,2,2,2,2,2,2,2,1,1,0,0,0,0},
			{1,2,2,1,1,1,1,1,1,2,2,1,0,0,0,0},
			{1,2,2,1,1,1,1,1,1,2,2,1,0,0,0,0},
			{1,1,2,2,2,2,2,2,2,2,1,1,0,0,0,0},
			{0,1,2,2,2,2,2,2,2,2,1,0,0,0,0,0},
			{0,1,1,2,2,2,2,2,2,1,1,0,0,0,0,0},
			{0,0,1,1,1,2,2,1,1,1,1,0,0,0,0,0},
			{0,0,0,0,1,1,1,1,0,0,1,1,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0}
		},
		{	
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0},
			{0,0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0,0},
			{0,0,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,0,0},
			{0,0,1,2,2,0,0,0,2,2,2,2,0,0,0,2,2,1,0,0},
			{0,0,1,2,0,1,1,1,0,2,2,0,1,1,1,0,2,1,0,0},
			{0,0,1,2,0,1,1,1,0,2,2,0,1,1,1,0,2,1,0,0},
			{0,0,1,2,2,0,0,0,2,2,2,2,0,0,0,2,2,1,0,0},
			{0,0,1,2,2,2,2,2,2,2,1,2,2,2,2,2,2,1,0,0},
			{0,0,1,2,2,2,2,2,2,1,2,2,2,2,2,2,2,1,0,0},
			{0,0,0,1,2,2,2,2,1,1,2,2,2,2,2,2,1,0,0,0},
			{0,0,0,1,2,2,2,1,1,2,2,2,2,2,2,1,0,0,0,0},
			{0,0,0,0,1,2,2,1,1,2,2,2,2,2,1,0,0,0,0,0},
			{0,0,0,0,0,1,1,2,1,1,2,1,1,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{0,0,1,1,1,0,1,1,1,1,0,1,1,1,1,0},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1},
			{0,1,1,1,1,0,1,1,1,1,0,1,1,1,1,0}
		},
		{
			{0,0,0,0,1,0,0,0,0,0,1,1,0,0,0,0},
			{0,0,0,1,0,0,0,0,1,1,0,0,1,0,0,0},
			{0,0,1,0,0,0,1,1,0,0,0,0,0,1,0,0},
			{0,1,0,0,0,1,0,0,0,0,0,0,0,1,0,0},
			{1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0},
			{0,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0},
			{0,0,0,1,0,0,0,1,0,0,0,1,0,0,1,0},
			{0,0,1,0,0,0,1,0,0,0,0,1,0,0,1,0},
			{0,0,1,0,0,1,0,0,0,0,0,1,0,0,1,0},
			{0,0,1,0,0,1,0,0,0,0,0,1,0,0,0,1},
			{0,0,1,0,0,0,1,1,0,0,1,0,0,0,0,1},
			{0,0,0,1,0,0,0,0,1,1,0,0,0,0,0,1},
			{0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,1,1,1,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,1,1,0,0,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0}
		},
		{
			{0,0,0,0,0,1,0,0,1,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1},
			{0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1},
			{0,0,0,0,0,1,0,0,1,0,0,0,0,0,1,0},
			{0,0,0,0,1,0,0,0,0,1,0,0,0,0,1,0},
			{0,0,0,1,0,0,0,0,0,0,1,1,0,1,0,0},
			{0,0,1,0,0,0,0,0,0,0,0,0,1,1,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
			{0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,0},
			{0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,1,0,1,1,0,0,0,0}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
			{0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2},
			{2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,2},
			{2,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,2},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2}
		},
		{
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
			{2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,2},
			{2,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,2},
			{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
			{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,0,0,0,1,0,0,0,0,0,0,0,0,1,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1},
			{1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1}
		},
		{
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0},
			{0,0,0,1,1,0,1,0,0,0,0,1,0,1,1,0,0,0},
			{1,1,1,1,1,1,1,0,0,0,0,1,1,1,1,1,1,1},
			{0,0,0,1,1,0,1,0,0,0,0,1,0,1,1,0,0,0},
			{0,0,1,0,0,0,1,0,0,0,0,1,0,0,0,1,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0}
		},
		{
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			{1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
			{1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
			{1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
			{1,1,0,1,0,0,0,0,0,0,0,0,0,0,1,1,0,1},
			{1,0,1,1,0,0,0,0,0,0,0,0,0,0,1,0,1,1},
			{1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1},
			{1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,1},
			{1,1,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1},
			{1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1},
			{1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1},
			{1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1},
			{1,1,0,1,1,1,1,1,1,1,1,1,0,0,1,1,0,1},
			{1,0,1,1,1,1,1,1,1,1,1,1,0,0,1,0,1,1},
			{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,0,1,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,1,1,0,0,0,0,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,1,0,0,1,1,0,1,1,0,0,0},
			{0,0,0,0,0,0,0,0,1,1,0,0,0,1,1,1,0,0},
			{0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,1,1,0},
			{0,0,0,0,0,1,1,0,0,1,0,0,0,1,1,1,0,0},
			{0,1,1,1,1,0,0,0,0,1,0,0,0,1,0,1,0,0},
			{0,1,0,1,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
			{0,1,1,1,1,0,0,0,0,0,1,0,0,0,0,0,1,0},
			{0,0,0,0,0,1,1,0,0,0,0,1,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,1,1,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,1,1,1,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,0,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0},
			{0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,0},
			{0,0,0,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
			{1,1,1,0,0,0,0,1,1,1,1,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,0},
			{0,0,0,0,0,0,0,0,1,0,0,0,1,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0},
			{0,0,0,0,1,1,1,0,0,0,1,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		},
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,0,0},
			{0,0,0,0,0,0,0,0,1,1,0,0,1,1,0,0,0,0},
			{0,0,0,0,0,0,1,1,1,0,1,1,0,0,0,0,0,0},
			{0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		}, 
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
			{0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0},
			{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
			{0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0},
			{0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
			{0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		}, 
		{
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0},
			{0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,0},
			{0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
			{0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0},
			{0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0},
			{0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
			{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
		 },
		 {
			 	{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
				{0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,1,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,1,0,1,0,0,0,0,0,0,0,0,0,0,0},
				{0,1,0,0,0,1,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,1,0,0,0,1,0,0,0,0,0,0},
				{0,0,0,0,0,0,1,0,1,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,0},
				{0,0,0,0,0,0,0,1,0,0,1,1,1,1,1,0},
				{0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0},
				{0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,0},
				{0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}
			},
			
//			***** GMA 1.6.2: Draw new positive/negative icons
			{
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2},
				{2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2}
			},
			{
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
			 	{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1},
				{1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1}
//			***** GMA 1.6.2				
				
			}
		};
	public static void main(String[] args) {
		JFrame frame = new JFrame("Icons");
		Box box = Box.createHorizontalBox();
		JToggleButton tb;
		for(int k=0 ; k<map.length ; k++) {
			tb = new JToggleButton();
			tb.setIcon( getIcon(k, false) );
			tb.setSelectedIcon( getIcon(k, true) );
			tb.setBorder(null);
			box.add(tb);
		}
		for( int k=32 ; k<35 ; k++) {
			tb = new JToggleButton();
			tb.setIcon( getIcon(k, false) );
			tb.setSelectedIcon( getIcon(k, true) );
			tb.setBorder(null);
			box.add(tb);
		}
		frame.getContentPane().add(box,"North");
		frame.pack();
		frame.show();
		frame.setDefaultCloseOperation( frame.EXIT_ON_CLOSE);
	}
}
